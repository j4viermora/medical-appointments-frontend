import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { IMetadata } from 'interfaces';



// Generated by https://quicktype.io

export interface IDoctor {
    _id: string;
    name: string;
    phone: string;
    companyId: string;
    createdAt: string;
    updatedAt: string;
}



interface IDoctorsState {
    doctors: IDoctor[] | [];
    isLoading: boolean;
    metadata: IMetadata;
    currentDoctor?: IDoctor
}
const initialState: IDoctorsState = {
    doctors: [],
    isLoading: false,
    metadata: {
        totalDocs: 0,
        limit: 10,
        totalPages: 0,
        page: 0,
        pagingCounter: 0,
        hasPrevPage: false,
        hasNextPage: false,
        prevPage: null,
        nextPage: null,
    },
};

const doctorsSlice = createSlice({
    name: 'doctors',
    initialState,
    reducers: {
        setDoctors: (state, action) => {
            state.doctors = action.payload;
        },
        setLoading: (state, action) => {
            state.isLoading = action.payload;
        },
        setMetadata: (state, action: PayloadAction<IMetadata>) => {
            state.metadata = action.payload;
        },
        setCurrentDoctor: (state, action: PayloadAction<IDoctor>) => {
            state.currentDoctor = action.payload
        }
    },
});

export const { setDoctors, setLoading, setMetadata, setCurrentDoctor } = doctorsSlice.actions;
export default doctorsSlice.reducer;
